// /*! ========================================================================== 
//  * pongstagr.am v3.0.4 jQuery Plugin | http://pongstr.github.io/pongstagr.am/ 
//  * =========================================================================== 
//  * Copyright (c) 2014 Pongstr Ordillo. Licensed under MIT License. 
//  * =========================================================================== */
// +function(a){"use strict";var b=function(a,b){return this.element=a,this.options=b,this};b.defaults={accessId:null,accessToken:null,count:8,likes:!0,comments:!0,timestamp:!0,effects:"scaling",show:"recent",preload:"spinner",button:"btn btn-success pull-right",buttontext:"Load more",column:"col-xs-12 col-sm-3 col-md-3 col-lg-3",likeicon:"glyphicon glyphicon-heart",muteicon:"glyphicon glyphicon-volume-off",videoicon:"glyphicon glyphicon-play",commenticon:"glyphicon glyphicon-comment",picture_size:64,show_counts:!0,profile_bg_img:null,profile_bg_color:"#d9534f"},b.prototype.template={loadmore:function(b){var c='<div class="row">';c+='  <button class="'+b.button+'" data-paginate="'+b.show+'">',c+=b.buttontext,c+="  </button>",c+="</div>","before"!==b.insert?a(b.target).after(c):a(b.target).before(c)},profile:function(b){var c='<div class="row pongstgrm-profile">';c+=' <div class="col-xs-12 text-center">',c+='   <div class="thumbnail">',c+='     <img src="'+b.profile_picture+'" width="'+b.picture_size+'"  height="'+b.picture_size+'" alt="'+b.username+'">',c+="   </div>",c+='   <div class="counts">',c+='     <span class="h4">'+b.media+" <small>Posts</small></span>",c+='     <span class="h4">'+b.followed_by+" <small>Followers</small></span>",c+='     <span class="h4">'+b.follows+" <small>Following</small></span>",c+="   </div>",c+='   <div class="user-data">',c+="     <h3>"+b.username+"</h3>",c+="     <small>"+b.full_name+' - <a href="'+b.website+'">'+b.website+"</a></small>",c+="     <p>"+b.bio+"</p>",c+="   </div>",c+=" </div>",c+="</div>",a(b.target).append(c).css({"background-image":"url("+b.profile_bg_img+")","background-color":b.profile_bg_color})},thumb:function(b){var c='<div class="'+b.dflt.column+'">';c+=' <div class="thumbnail text-center '+b.dflt.effects+'">',b.dflt.timestamp!==!1?c+="<strong>"+b.data.timestamp+"</strong>":null,c+='   <div class="'+b.dflt.preload+'" id="'+b.dflt.show+"-"+b.data.id+'-thmb-loadr" />',c+='   <a href="#'+b.data.id+'" id="triggr-'+b.data.id+'">',c+='     <img id="'+b.dflt.show+"-"+b.data.id+'-thmb" src="'+b.data.thumbnail+'" alt="'+b.data.caption+'">',c+="   </a>","video"===b.data.type?c+='<span class="type"><i class="'+b.dflt.videoicon+'"></i></span>':"",b.data.likes!==!1?c+='<span class="likes"><i class="'+b.dflt.likeicon+'"></i>&nbsp; '+b.data.likes_count+"</span>":"",b.data.comments!==!1?c+='<span class="comments"><i class="'+b.dflt.commenticon+'"></i>&nbsp; '+b.data.comments_count+"</span>":"",c+=" </div>",c+="</div>",a(b.target).append(c)},bsmodal:function(c){var d='<div class="alert">Your browser does not support HTML5 Videos or MPEG-4 format.</div>',e='<div class="'+c.dflt.preload+'" id="'+c.data.id+'-full-loadr"></div>';e+='<img id="'+c.data.id+'-full" src="'+c.data.image+'" alt="'+c.data.caption+'">';var f='<video id="'+c.data.id+'-video" width="100%" height="auto">';f+='  <source src="'+c.data.video+'" type="video/mp4">',f+=d,f+="</video>",f+='<button type="button" class="btn btn-lg" id="play-pause"><i class="glyphicon glyphicon-play"></i></button>',f+='<button type="button" class="btn btn-lg" id="mute"><i class="glyphicon glyphicon-volume-up"></i></button>';var g='<div id="'+c.data.id+'" class="modal fade">';g+='  <div class="modal-dialog">',g+='    <div class="modal-content">',g+='      <div class="modal-body">',g+='        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>',g+='        <div class="row">',g+='<div class="media-column">',g+="video"!==c.data.type?e:navigator.userAgent.match(/webkit/i)||navigator.userAgent.match(/(iPod|iPhone|iPad)/)?f:d+e,g+="</div>",g+='<div class="media-comment">',g+='<div class="media">',g+='  <a href="https://instagram.com/'+c.data.username+'" class="media-object thumbnail pull-left">',g+='    <img src="'+c.data.profile_picture+'" width="'+c.dflt.picture_size+'" height="'+c.dflt.picture_size+'" class="">',g+="  </a>",g+='  <div class="modal-body">',g+='      <h5 class="media-heading">',g+='        <a href="https://instagram.com/'+c.data.username+'">'+c.data.username+"</a>",g+="      </h5>",null!==c.data.caption?g+="      <p>"+c.data.caption+"</p>":"",g+="  </div>",g+="</div>",0!==c.data.comments_count?a.each(c.data.comments_data,function(a,b){g+='<div class="media">',g+='  <a href="https://instagram.com/'+b.from.username+'" class="media-object thumbnail pull-left">',g+='    <img src="'+b.from.profile_picture+'" width="'+c.dflt.picture_size+'" height="'+c.dflt.picture_size+'">',g+="  </a>",g+='  <div class="modal-body">',g+='      <h5 class="media-heading">',g+='        <a href="https://instagram.com/'+b.from.username+'">'+b.from.username+"</a>",g+="      </h5>",g+="      <p>"+b.text+"</p>",g+="  </div>",g+="</div>"}):"",g+="        </div>",g+="      </div>",g+="    </div>",g+="  </div>",g+="</div>",a("#triggr-"+c.data.id).on("click",function(d){d.preventDefault(),a("body").append(g),a("#"+c.data.id).modal("show").on("shown.bs.modal",function(){var a=document.getElementById(c.data.id+"-video");b.prototype.preloadMedia({imgid:"#"+c.data.id+"-full",loadr:"#"+c.data.id+"-full-loadr"}),b.prototype.videoBtn({trigger:"#play-pause",child:"i",classes:"glyphicon-play glyphicon-pause"},function(){a.paused===!0?a.play():a.pause()}),b.prototype.videoBtn({trigger:"#mute",child:"i",classes:"glyphicon-volume-up glyphicon-volume-off"},function(){a.muted=a.muted===!1?!0:!1})}).on("hidden.bs.modal",function(){a(this).remove()})})}},b.prototype.preloadMedia=function(b){var c=a(b.imgid),d=0;c.one("load",function(){++d===c.length&&a(b.loadr).fadeOut(),a(this).addClass("fade")}).each(function(){this.complete&&a(this).load()})},b.prototype.videoBtn=function(b,c){a(b.trigger).on("click",function(d){d.preventDefault(),c(),a(b.child,this).toggleClass(b.classes)})},b.prototype.stream=function(){function c(b){void 0===b.url||null===b.url?a("[data-paginate="+b.show+"]").on("click",function(b){a(this).removeClass().addClass("btn btn-default").attr("disabled","disabled"),b.preventDefault()}):a("[data-paginate="+b.show+"]").on("click",function(c){c.preventDefault(),f({url:b.url,opt:b.opt}),a(this).unbind(c)})}function d(c,d){a.each(c,function(a,c){var e=new Date(1e3*c.created_time),f=e.toDateString(),h={dflt:d,target:g,data:{id:c.id,type:c.type,video:c.videos&&c.videos.standard_resolution.url,image:c.images.standard_resolution.url,caption:c.caption&&c.caption.text,username:c.user.username,timestamp:f,thumbnail:c.images.low_resolution.url,likes_count:c.likes.count,comments_count:c.comments.count,comments_data:c.comments.data,profile_picture:c.user.profile_picture}};b.prototype.template.thumb(h),b.prototype.preloadMedia({imgid:"#"+d.show+"-"+c.id+"-thmb",loadr:"#"+d.show+"-"+c.id+"-thmb-loadr"}),b.prototype.template.bsmodal(h)})}function e(a,c){b.prototype.template.profile({target:g,bio:a.bio,media:a.counts.media,website:a.website,follows:a.counts.follows,username:a.username,full_name:a.full_name,followed_by:a.counts.followed_by,picture_size:c.picture_size,profile_bg_img:c.profile_bg_img,profile_picture:a.profile_picture,profile_bg_color:c.profile_bg_color})}function f(b){a.ajax({url:b.url,cache:!0,method:"GET",dataType:"jsonp",success:function(a){"profile"!==b.opt.show?d(a.data,b.opt):e(a.data,b.opt),"profile"!==b.opt.show&&c({show:b.opt.show,url:a.pagination.next_url,opt:b.opt})}})}var g=this.element,h=this.options,i="https://api.instagram.com/v1/users/",j="?count="+h.count+"&access_token="+h.accessToken;switch(h.show){case"liked":f({url:i+"self/media/liked"+j,opt:h});break;case"feed":f({url:i+"self/feed"+j,opt:h});break;case"profile":f({url:i+h.accessId+"?access_token="+h.accessToken,opt:h});break;case"recent":f({url:i+h.accessId+"/media/recent"+j,opt:h});break;default:f({url:"https://api.instagram.com/v1/tags/"+h.show+"/media/recent"+j,opt:h})}},b.prototype.create=function(){var c=this.element,d=this.options;a(c).attr("data-type",d.show).addClass("pongstagrm row"),"profile"!==d.show&&b.prototype.template.loadmore({show:d.show,target:c,button:d.button,buttontext:d.buttontext}),this.stream()},b.prototype.start=function(){var a=this.options;return null!==a.accessId||null!==a.accessToken?(this.create(),void 0):void 0},a.fn.pongstgrm=function(c){var d=a.extend({},b.defaults,c);return this.each(function(){var c=new b(a(this)[0],d);c.start()})},a.fn.pongstgrm.defaults=b.options}(window.jQuery);

/*! ========================================================================== 
 * pongstagr.am v3.0.4 jQuery Plugin | http://pongstr.github.io/pongstagr.am/ 
 * =========================================================================== 
 * Copyright (c) 2014 Pongstr Ordillo. Licensed under MIT License. 
 * =========================================================================== */

+function ($) { "use strict"; 

  var Pongstgrm = function (element, options) {
    this.element  = element
    this.options  = options

    return this
  }

  Pongstgrm.defaults = {

    // USER AUTHENTICATION
    // ===========================
      accessId:     null
    , accessToken:  null

    // DISPLAY OPTIONS
    // ===========================
    , count:       8
    , likes:       true
    , comments:    true
    , timestamp:   true
    , effects:    "scaling"
    , show:       "recent"

    // HTML OPTIONS
    // ===========================
    , preload:          "spinner"
    , button:           "btn btn-success"
    , buttontext:       "Lihat yang lain"
    , column:           "col-xs-12 col-sm-3 col-md-3 col-lg-3"
    , likeicon:         "glyphicon glyphicon-heart"
    , muteicon:         "glyphicon glyphicon-volume-off"
    , videoicon:        "glyphicon glyphicon-play"
    , commenticon:      "glyphicon glyphicon-comment"
    , picture_size:     64
    , show_counts:      true
    , profile_bg_img:   null
    , profile_bg_color: "#d9534f"
  }


  /* HTML TEMPLATES */
  Pongstgrm.prototype.template = {
    loadmore: function (options) {
      var _load  = '<div class="row">'
          _load += '  <button class="'+ options.button +'" data-paginate="'+ options.show +'">'
          _load +=      options.buttontext
          _load += '  </button>'
          _load += '</div>'

      options.insert !== 'before' ? 
        $(options.target).after (_load) :
        $(options.target).before(_load)

      return
    }
    , profile: function (options) {
        var _profile  = '<div class="row pongstgrm-profile">'
            _profile += ' <div class="col-xs-12 text-center">'
            _profile += '   <div class="thumbnail">'
            _profile += '     <img src="'+ options.profile_picture +'" width="'+ options.picture_size +'"  height="'+ options.picture_size +'" alt="'+ options.username +'">'
            _profile += '   </div>'
            _profile += '   <div class="counts">'
            _profile += '     <span class="h4">'+ options.media +' <small>Posts</small></span>'
            _profile += '     <span class="h4">'+ options.followed_by +' <small>Followers</small></span>'
            _profile += '     <span class="h4">'+ options.follows +' <small>Following</small></span>'
            _profile += '   </div>'
            _profile += '   <div class="user-data">'
            _profile += '     <h3>'+ options.username +'</h3>'
            _profile += '     <small>'+ options.full_name +' - <a href="'+ options.website +'">' + options.website +'</a></small>'
            _profile += '     <p>'+ options.bio +'</p>'
            _profile += '   </div>'
            _profile += ' </div>'
            _profile += '</div>'
          $(options.target)
            .append(_profile)
            .css({
                'background-image': 'url(' + options.profile_bg_img + ')'
              , 'background-color':  options.profile_bg_color
            })

        return
      }
    , thumb: function (options) {
        var _thumbnail  = '<div class="'+ options.dflt.column +'">'
            _thumbnail += ' <div class="thumbnail text-center ' + options.dflt.effects + '">'

          options.dflt.timestamp !== false ?
            _thumbnail += '<strong>'+ options.data.timestamp +'</strong>' : null
            _thumbnail += '   <div class="'+ options.dflt.preload +'" id="'+ options.dflt.show + '-' + options.data.id +'-thmb-loadr" />'
            _thumbnail += '   <a href="#'+ options.data.id +'" id="triggr-'+ options.data.id +'">'
            _thumbnail += '     <img id="'+ options.dflt.show + '-' + options.data.id +'-thmb" src="'+ options.data.thumbnail +'" alt="'+ options.data.caption +'">'
            _thumbnail += '   </a>'

          options.data.type === 'video' ? 
            _thumbnail += '<span class="type"><i class="'+ options.dflt.videoicon +'"></i></span>': ""

          options.data.likes !== false ?
            _thumbnail += '<span class="likes"><i class="'+ options.dflt.likeicon +'"></i>&nbsp; '+ options.data.likes_count+'</span>': ""

          options.data.comments !== false ? 
            _thumbnail += '<span class="comments"><i class="'+ options.dflt.commenticon +'"></i>&nbsp; '+ options.data.comments_count+'</span>': ""
            _thumbnail += ' </div>'
            _thumbnail += '</div>'

        $(options.target).append(_thumbnail)

      return
    }
    , bsmodal: function (options) {
        var alert  = '<div class="alert">Your browser does not support HTML5 Videos or MPEG-4 format.</div>'
          , image  = '<div class="'+ options.dflt.preload +'" id="'+ options.data.id +'-full-loadr"></div>'
            image += '<img id="'+ options.data.id +'-full" src="'+ options.data.image +'" alt="'+ options.data.caption +'">'

        var video  = '<video id="'+ options.data.id +'-video" width="100%" height="auto">'
            video += '  <source src="'+ options.data.video +'" type="video/mp4">'
            video +=  alert
            video += '</video>'
            video += '<button type="button" class="btn btn-lg" id="play-pause"><i class="glyphicon glyphicon-play"></i></button>'
            video += '<button type="button" class="btn btn-lg" id="mute"><i class="glyphicon glyphicon-volume-up"></i></button>'

        var modal  = '<div id="'+ options.data.id +'" class="modal fade">'
            modal += '  <div class="modal-dialog">'
            modal += '    <div class="modal-content">'
            modal += '      <div class="modal-body">'
            modal += '        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>'
            modal += '        <div class="row">'
            modal += '<div class="media-column">'

          options.data.type !== 'video' ?
            modal += image : 
          navigator.userAgent.match(/webkit/i) || navigator.userAgent.match(/(iPod|iPhone|iPad)/) ?
            modal += video : 
            modal += alert + image

            modal += '</div>'
            modal += '<div class="media-comment">'

            modal += '<div class="media">'
            modal += '  <a href="https://instagram.com/'+ options.data.username +'" class="media-object thumbnail pull-left">'
            modal += '    <img src="'+ options.data.profile_picture +'" width="'+ options.dflt.picture_size +'" height="'+ options.dflt.picture_size +'" class="">'
            modal += '  </a>'
            modal += '  <div class="modal-body">'
            modal += '      <h5 class="media-heading">'
            modal += '        <a href="https://instagram.com/'+ options.data.username +'">'+ options.data.username +'</a>'
            modal += '      </h5>'

          options.data.caption !== null ?
            modal += '      <p>'+ options.data.caption +'</p>': ""
            modal += '  </div>'
            modal += '</div>'

          options.data.comments_count !== 0 ?
            $.each(options.data.comments_data, function(a, b){
              modal += '<div class="media">'
              modal += '  <a href="https://instagram.com/'+ b.from.username +'" class="media-object thumbnail pull-left">'
              modal += '    <img src="'+ b.from.profile_picture +'" width="'+ options.dflt.picture_size +'" height="'+ options.dflt.picture_size +'">'
              modal += '  </a>'
              modal += '  <div class="modal-body">'
              modal += '      <h5 class="media-heading">'
              modal += '        <a href="https://instagram.com/'+ b.from.username +'">'+ b.from.username +'</a>'
              modal += '      </h5>'
              modal += '      <p>'+ b.text +'</p>'
              modal += '  </div>'
              modal += '</div>'
            }) : ""

            modal += '        </div>'
            modal += '      </div>'
            modal += '    </div>'
            modal += '  </div>'
            modal += '</div>'

        $('#triggr-' + options.data.id).on('click', function(e) {
          e.preventDefault()

          $('body').append(modal)
          $('#' + options.data.id)
            .modal('show')
            .on('shown.bs.modal',  function() {
              var video = document.getElementById(options.data.id +'-video')

              Pongstgrm.prototype.preloadMedia({
                  imgid : '#' + options.data.id +'-full'
                , loadr : '#' + options.data.id +'-full-loadr'
              })

              Pongstgrm.prototype.videoBtn({
                  trigger: '#play-pause'
                , child:   'i'
                , classes: 'glyphicon-play glyphicon-pause'
              }, function () { video.paused === true ? video.play() : video.pause() })

              Pongstgrm.prototype.videoBtn({
                  trigger: '#mute'
                , child:   'i'
                , classes: 'glyphicon-volume-up glyphicon-volume-off'
              }, function() { video.muted === false ?  video.muted = true :  video.muted = false })

            })
            .on('hidden.bs.modal', function() {
              $(this).remove()
            })
        })

      return
    }
  }


  Pongstgrm.prototype.preloadMedia = function (option) {
    var $image = $(option.imgid)
      ,  start = 0

    $image.one('load', function () {
      ++start === $image.length &&
        $(option.loadr).fadeOut()
        $(this).addClass('fade')
    }).each(function () {
      this.complete && $(this).load()
    })

    return
  }


  Pongstgrm.prototype.videoBtn = function (option, callback) {
    $(option.trigger).on('click', function(e) {
      e.preventDefault(); callback();

      $(option.child, this)
        .toggleClass(option.classes)
    })

    return
  }

  Pongstgrm.prototype.stream = function () {
    var element = this.element
      , options = this.options
      , apiurl  = 'https://api.instagram.com/v1/users/'
      , rcount  = '?count=' +  options.count + '&access_token=' + options.accessToken

    function paginate (option) {
      (option.url === undefined || option.url === null) ? 
        $('[data-paginate='+ option.show +']').on('click', function (e) {
            $(this)
              .removeClass()
              .addClass('btn btn-default')
              .attr('disabled','disabled')
          e.preventDefault()
        }) :

        $('[data-paginate='+ option.show +']').on('click', function (e) {
          e.preventDefault()

          ajaxdata({ 
              url: option.url
            , opt: option.opt 
          })

          $(this).unbind(e)
        })

      return
    }

    function media (data, option) {
      $.each(data, function (a, b) {
        var newtime = new Date(b.created_time * 1000)
          , created = newtime.toDateString()
          , defaults = {
              dflt: option
            , target: element
            , data: {
                  id:             b.id
                , type:           b.type
                , video:          b.videos && b.videos.standard_resolution.url
                , image:          b.images.standard_resolution.url
                , caption:        b.caption && b.caption.text 
                , username:       b.user.username
                , timestamp:      created
                , thumbnail:      b.images.low_resolution.url
                , likes_count:    b.likes.count
                , comments_count: b.comments.count
                , comments_data:  b.comments.data
                , profile_picture:b.user.profile_picture
              }
          }

        Pongstgrm.prototype.template.thumb (defaults)

        Pongstgrm.prototype.preloadMedia({
            imgid : '#' + option.show + '-' + b.id + '-thmb'
          , loadr : '#' + option.show + '-' + b.id + '-thmb-loadr'
        })

        Pongstgrm.prototype.template.bsmodal (defaults)

      })
    }

    function profile (data, option) {
      Pongstgrm.prototype.template.profile ({
          target:             element
        , bio:                data.bio
        , media:              data.counts.media
        , website:            data.website
        , follows:            data.counts.follows
        , username:           data.username
        , full_name:          data.full_name
        , followed_by:        data.counts.followed_by
        , picture_size:       option.picture_size
        , profile_bg_img:     option.profile_bg_img
        , profile_picture:    data.profile_picture
        , profile_bg_color:   option.profile_bg_color
      })
      return
    }

    function ajaxdata (option) {
      $.ajax({
          url      : option.url
        , cache    : true
        , method   : 'GET'
        , dataType : 'jsonp' 
        , success  : function(data){
            option.opt.show !== 'profile' ?
              media   (data.data, option.opt) :
              profile (data.data, option.opt)

            option.opt.show !== 'profile' &&
              paginate ({ 
                  show: option.opt.show
                , url:  data.pagination.next_url
                , opt: option.opt
              })
          }
      })

      return
    }

    switch (options.show) {
      case 'liked':
        ajaxdata({
            url : apiurl + 'self/media/liked' + rcount
          , opt : options
        })
      break

      case 'feed':
        ajaxdata({
            url: apiurl + 'self/feed' + rcount
          , opt: options
        })
      break

      case 'profile':
        ajaxdata({
            url: apiurl + options.accessId + '?access_token=' + options.accessToken
          , opt: options
        })
      break

      case 'recent':
        ajaxdata({
            url: apiurl + options.accessId + '/media/recent' + rcount
          , opt: options
        })
      break

      default:
        ajaxdata({
            url: 'https://api.instagram.com/v1/tags/' + options.show + '/media/recent' + rcount
          , opt: options
        })
    }

    return
  }


  Pongstgrm.prototype.create = function () {
    var element = this.element
      , options = this.options

    $(element)
      .attr('data-type', options.show)
      .addClass('pongstagrm row')


    options.show !== 'profile' &&
      Pongstgrm.prototype.template.loadmore({
          show:       options.show
        , target:     element
        , button:     options.button
        , buttontext: options.buttontext
      })

    this.stream()

    return
  }


  Pongstgrm.prototype.start = function () {
    var option = this.options
    if (option.accessId !== null || option.accessToken !== null) {
      this.create(); return
    }
  }

  // PONGSTAGR.AM PLUGIN DEFINITON
  // =============================
  $.fn.pongstgrm = function (option) {
    var options  = $.extend({}, Pongstgrm.defaults, option)

    return this.each(function () {
      var media = new Pongstgrm($(this)[0], options)
          media.start()
    })
  }


  // PONGSTAGR.AM DEFAULT OPTIONS
  // =============================  
  $.fn.pongstgrm.defaults = Pongstgrm.options

}(window.jQuery);